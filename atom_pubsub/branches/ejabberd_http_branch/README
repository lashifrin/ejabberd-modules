# the Atom PubSub tunnel
# Eric Cestari <eric@ohmforce.com>
# http://www.cestari.info/
# 20-06-2008

NOTE : This code works with ejabberd_http, not yaws. 
You need to apply the patch from https://support.process-one.net/browse/EJAB-662 if you are running ejabberd 2.0.x.
Patch is added in 2.1.

# Licensed under the same terms as ejabberd (that would be some version of the GPL)

This module provides ejabberd PubSub data via an AtomPub interface.

# Howto
Edit Makefile
Edit the BASEURL macro in atom_pubsub.erl to match the DNS name of your webserver.
Drop the beam somewhere where it can be be found by ejabberd

# What you get

The AtomPub interface passes the Atom Protocol Exerciser (though some warnings remain).

It means that any AtomPub clients will be able to post to a specific node in your PubSub tree.

It also means that your PubSub tree will also be available as an AtomFeed.

Of course, each time an item is posted through AtomPub or PubSub on a node you are subscribed to, you'll get the notification.

Authentication is required ; you need to authentify (http basic) as a user with the publisher role to be able to post via AtomPub

It expects the payload to be an atom entry, but does not enforce it.

However, it has to be well formed XML.

# Can I have it with OpenFire and Epeios ?
That's not possible. For fetching individual items, there's no way around hitting directly the PubSub mnesia tables.

Code can't be extracted as an XMPP component.

Moreover, it only works with PubSub nodes derived from the default node type. (because of the mnesia tables stuff)

# What's next ?

that's the minimum to pass the Atom Protocol Exercizer. Still has a few warning.

Adding support for collection and/or binary data would not be hard, combined with the ejabberd_http_fileserver

I'd like ejabberd_http to support custom Headers for the slug !

